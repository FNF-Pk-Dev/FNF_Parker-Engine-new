
# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"

  buildAndroid:
    name: buildAndroid
    runs-on: macos-15
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r27c

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.7

      - name: Restore existing build cache for faster compilation
        uses: actions/cache@v4
        with:
          # not caching the bin folder to prevent asset duplication and stuff like that
          key: cache-build-android
          path: |
            .haxelib/
            export/release/android/haxe/
            export/release/android/obj/
          restore-keys: |
            cache-build-android

      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib git hxcpp https://github.com/HomuHomu833/hxcpp
          haxelib git lime https://github.com/HomuHomu833/lime int-delta
          haxelib install openfl 9.2.2
          haxelib git flixel https://github.com/FNF-Pk-Dev/flixel 9daa047aa075a133a7a11a2d049c26c8317f65af
          haxelib install flixel-tools
          haxelib install flixel-ui 2.6.1
          haxelib install flixel-addons 3.2.2
          haxelib install tjson
          haxelib install hxjsonast
          haxelib install hscript
          haxelib install hscript-iris
          haxelib install hxvlc 1.9.1
          haxelib git pyscript https://github.com/Ajwyunsx/pythonScript
          haxelib git lscript https://github.com/Ajwyunsx/lscript
          haxelib git haxe-crypto https://github.com/soywiz/haxe-crypto.git
          haxelib git flxgif https://github.com/MAJigsaw77/flxgif.git
          haxelib git linc_luajit https://github.com/th2l-devs/linc_luajit
          haxelib install hxcpp-debug-server
          haxelib list
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Setup Lime
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
          haxelib set lime git
          haxelib set openfl 9.3.3
          haxelib set flixel-addons 3.2.2
          haxelib set hxcpp git
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Compile
        run: haxelib run lime build android -D NO_PRECOMPILED_HEADERS --app-version="4.0.0-${{ github.run_id}}"

      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: buildAndroid
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk


      - name: Clearing already existing cache
        uses: actions/github-script@v6
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if (cache.key == "cache-build-android") {
                console.log('Clearing ' + cache.key + '...')
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
                console.log("Cache cleared.")
              }
            }
      - name: Uploading new cache
        uses: actions/cache@v4
        with:
          # caching again since for some reason it doesnt work with the first post cache shit
          key: cache-build-android
          path: |
            .haxelib/
            export/release/android/haxe/
            export/release/android/obj/
          restore-keys: |
            cache-build-android








